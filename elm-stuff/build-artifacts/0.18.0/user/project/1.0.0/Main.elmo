var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {subreddit: a, entries: b};
	});
var _user$project$Main$Entry = F6(
	function (a, b, c, d, e, f) {
		return {title: a, score: b, url: c, permalink: d, voteStatus: e, id: f};
	});
var _user$project$Main$Subreddit = function (a) {
	return {name: a};
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(
		_user$project$Main$Model,
		_user$project$Main$Subreddit('surfing'),
		{ctor: '[]'}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$updateSubRedditSelection = function (subredditName) {
	return _user$project$Main$Subreddit(subredditName);
};
var _user$project$Main$Vote = F2(
	function (a, b) {
		return {ctor: 'Vote', _0: a, _1: b};
	});
var _user$project$Main$UpdateSubReddit = function (a) {
	return {ctor: 'UpdateSubReddit', _0: a};
};
var _user$project$Main$GetSubReddit = {ctor: 'GetSubReddit'};
var _user$project$Main$NewSubReddit = function (a) {
	return {ctor: 'NewSubReddit', _0: a};
};
var _user$project$Main$NullVote = {ctor: 'NullVote'};
var _user$project$Main$decodeEntry = A7(
	_elm_lang$core$Json_Decode$map6,
	_user$project$Main$Entry,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {
				ctor: '::',
				_0: 'title',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {
				ctor: '::',
				_0: 'score',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {
				ctor: '::',
				_0: 'url',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {
				ctor: '::',
				_0: 'permalink',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string),
	_elm_lang$core$Json_Decode$succeed(_user$project$Main$NullVote),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {
				ctor: '::',
				_0: 'id',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string));
var _user$project$Main$decodeSubReddit = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'children',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$list(_user$project$Main$decodeEntry));
var _user$project$Main$getSubRedditInfo = function (subredditName) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'https://www.reddit.com/r/',
		A2(_elm_lang$core$Basics_ops['++'], subredditName, '/.json'));
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeSubReddit);
	return A2(_elm_lang$http$Http$send, _user$project$Main$NewSubReddit, request);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'UpdateSubReddit':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							subreddit: _user$project$Main$updateSubRedditSelection(_p0._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'NewSubReddit':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{entries: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(
							_elm_lang$core$Debug$log,
							_elm_lang$core$Basics$toString(_p0._0._0),
							model),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'GetSubReddit':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getSubRedditInfo(model.subreddit.name)
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$sendVote = F2(
	function (vote, entry) {
		return _elm_lang$core$Native_Utils.eq(vote, entry.voteStatus) ? _elm_lang$core$Native_Utils.update(
			entry,
			{voteStatus: _user$project$Main$NullVote}) : _elm_lang$core$Native_Utils.update(
			entry,
			{voteStatus: vote});
	});
var _user$project$Main$vote = F3(
	function (vote, entry, model) {
		var entries = A3(
			_elm_community$list_extra$List_Extra$updateIf,
			function (x) {
				return _elm_lang$core$Native_Utils.eq(entry.id, x.id);
			},
			_user$project$Main$sendVote(vote),
			model.entries);
		return _elm_lang$core$Native_Utils.update(
			model,
			{entries: entries});
	});
var _user$project$Main$DownVote = {ctor: 'DownVote'};
var _user$project$Main$UpVote = {ctor: 'UpVote'};
var _user$project$Main$entryView = function (entry) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								A2(_user$project$Main$Vote, _user$project$Main$UpVote, entry)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('upvote'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									A2(_user$project$Main$Vote, _user$project$Main$DownVote, entry)),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('downvote'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(entry.score)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href(entry.url),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(entry.title),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$href(
											A2(_elm_lang$core$Basics_ops['++'], 'https://www.reddit.com', entry.permalink)),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('comments'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Go to Subreddit'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateSubReddit),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$GetSubReddit),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Submit'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(model.subreddit.name),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h2,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], 'https://www.reddit.com/r/', model.subreddit.name)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A2(_elm_lang$core$List$map, _user$project$Main$entryView, model.entries)),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
